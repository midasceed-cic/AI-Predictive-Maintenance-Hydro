[
    {
        "id": "d03d21a6b08e9b5b",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e817aba257393f7a",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c03307adcc4d5ef",
        "type": "mqtt-broker",
        "name": "mosquitto_broker",
        "broker": "mosquitto_broker",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d6a6dbdd58a2e9d1",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": 8086,
        "protocol": "http",
        "database": "hydro_data",
        "name": "influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "1",
        "type": "mqtt in",
        "z": "e817aba257393f7a",
        "name": "MQTT Sensor Input",
        "topic": "hydro_station/sensors",
        "qos": "2",
        "datatype": "json",
        "broker": "2c03307adcc4d5ef",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "bc876974588d2360"
            ]
        ]
    },
    {
        "id": "2",
        "type": "debug",
        "z": "e817aba257393f7a",
        "name": "Debug Output",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 580,
        "y": 140,
        "wires": []
    },
    {
        "id": "3",
        "type": "influxdb out",
        "z": "e817aba257393f7a",
        "influxdb": "d6a6dbdd58a2e9d1",
        "name": "Influxdb",
        "measurement": "sensor_data",
        "precision": "s",
        "retentionPolicy": "",
        "database": "hydro_data",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "midascreed",
        "bucket": "hydro_data",
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "7ae67c0d4c5ce93d",
        "type": "function",
        "z": "e817aba257393f7a",
        "name": "Prepare data for influxdb",
        "func": "// Format the payload for InfluxDB\nmsg.payload = [{\n    measurement: \"sensor_data\",  // Measurement name\n    tags: {\n        sensor: \"hydro_station\"  // Optional tag (you can add more tags as needed)\n    },\n    fields: {\n        temperature: msg.payload.temperature,  // Map fields here\n        vibration: msg.payload.vibration,\n        pressure: msg.payload.pressure\n    },\n    timestamp: msg.payload.timestamp  // The timestamp from your payload\n}];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc876974588d2360",
        "type": "function",
        "z": "e817aba257393f7a",
        "name": "function 1",
        "func": "// Assuming msg.payload is the input from MQTT\nmsg.payload = {\n    measurement: \"sensor_data\",  // The measurement name in InfluxDB\n    tags: {\n        sensor: \"hydro_station\"  // Tags help in filtering data (optional, but useful for categorization)\n    },\n    fields: {\n        temperature: msg.payload.temperature,  // Sensor temperature data\n        vibration: msg.payload.vibration,      // Sensor vibration data\n        pressure: msg.payload.pressure        // Sensor pressure data\n    },\n    timestamp: parseFloat(msg.payload.timestamp)  // Ensuring timestamp is a float\n};\n\n// Return the formatted message for the InfluxDB node\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "2",
                "3"
            ]
        ]
    }
]